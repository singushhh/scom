:main
a_name MSP ModsTYY
a_version 1.0
a_author s1ngxl4rity
a_add_type c_for
a_add_version c_for forge https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.1-47.3.0/forge-1.20.1-47.3.0-installer.jar 17

:button nosejaja
text Instalar MSP Mods MP (1.20.1 | Forge)
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚⚠︎〛Antes de continuar, al instalar este modpack estás reinstalando tu servidor...', RGB)}\n{gradient_text('〚➥ 〛Deseás continuar? 〔S/N〕❱ ', RGB)}", end='', flush=True); user_input = input().upper(); (print(f"\033[?25l{gradient_text('〚❮❰〛Volviendo al menu...', RGB)}", end='', flush=True) or time.sleep(3) or sys.exit()) if user_input != 'S' else None; print("\033[?25h", end='')
remove_server
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚✔ 〛Servidor eliminado!', RGB)}", end='', flush=True); time.sleep(3); print("\033[F\033[K", end=''); print("\033[?25h", end='')
sleep 1
download_version y c_for forge
exec wget -O forge-installer.jar https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.1-47.3.0/forge-1.20.1-47.3.0-installer.jar
exec if [ ! -f forge-installer.jar ]; then echo "Error: El archivo JAR no se descargó correctamente"; exit 1; fi
cls
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚🡻 〛', RGB)}{gradient_text('Descargando Forge 1.20.1 | 47.3.0...', RGB)}\033[1B", end=''); [print(f"\r{gradient_text('〘' + '◼ ' * i + '〙', RGB)}", end='', flush=True) or time.sleep(1) for i in range(1, 11)]; print("\033[?25h", end='')
sleep 1
cls
c_exec import subprocess, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚⎘ 〛Instalando Forge... (Espera un momento)', RGB)}", end='', flush=True); subprocess.run("java -jar forge-installer.jar --installServer > forge_install.log 2>&1", shell=True); print("\033[?25h", end=''); print("\033[F\033[K", end='')
cls
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚✔ 〛Forge descargado e instalado!', RGB)}", end='', flush=True); time.sleep(2); print("\033[F\033[K", end=''); print("\033[?25h", end='')
cls
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚🡻 〛', RGB)}{gradient_text('Descargando MSP Mods...', RGB)}\033[1B", end=''); [print(f"\r{gradient_text('〘' + '◼ ' * i + '〙', RGB)}", end='', flush=True) or time.sleep(1) for i in range(1, 11)]; print("\033[?25h", end='')
cls
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚✔ 〛MSP Mods descargados!', RGB)}", end='', flush=True); time.sleep(3); print("\033[F\033[K", end=''); print("\033[?25h", end='')
cls
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚⎘ 〛', RGB)}{gradient_text('Instalando MSP Mods...', RGB)}\033[1B", end=''); [print(f"\r{gradient_text('〘' + '◼ ' * i + '〙', RGB)}", end='', flush=True) or time.sleep(1) for i in range(1, 11)]; print("\033[?25h", end='')
download_file https://www.dropbox.com/scl/fi/0njbn8hwujpczajwalfnn/MSP_Mods_Modpack.zip?rlkey=vdipdg13q1hb4hhrz78xxbmfs&st=5kotwh33&dl=1 MSP_Mods_Modpack.zip
unzip MSP_Mods_Modpack.zip
exec echo "eula=true" >> eula.txt
config server_type forge
config server_version 1.20.1
config_save
exec rm MSP_Mods_Modpack.zip
cls
c_exec import time, sys; RGB = [(252, 150, 255), (255, 255, 255), (229, 115, 255)]; gradient_text = lambda text, colors: ''.join(f'\033[38;2;{int(c1[0] + (c2[0] - c1[0]) * t)};{int(c1[1] + (c2[1] - c1[1]) * t)};{int(c1[2] + (c2[2] - c1[2]) * t)}m{char}' for i, char in enumerate(text) for color_index in [(i * (len(colors) - 1)) // len(text)] for t in [(i * (len(colors) - 1)) / len(text) - color_index] for c1, c2 in [(colors[color_index], colors[color_index + 1] if color_index + 1 < len(colors) else colors[color_index])]) + '\033[0m'; print(f"\033[?25l{gradient_text('〚✔ 〛MSP Mods instalado!', RGB)}", end='', flush=True); print("\n" + gradient_text('〚⏎ 〛Apretá Enter para continuar...', RGB), end='', flush=True); input()